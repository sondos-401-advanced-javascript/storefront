{"version":3,"sources":["component/header.js","component/footer.js","store/categories.js","component/categories.js","store/cart.js","component/simple-cart.js","component/products.js","app.js","store/products.js","store/index.js","index.js"],"names":["connect","state","cart","props","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","className","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","id","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","cartProduct","map","option","i","MenuItem","key","selected","name","Footer","initialState","categories","displayName","activeCategory","useStyles","makeStyles","root","flexGrow","mapDispatchToProps","productBaseCategory","type","payload","counter","category","classes","value","setValue","Paper","Tabs","onChange","newValue","indicatorColor","textColor","centered","cat","Tab","div","label","addToCart","product","Button","data","size","color","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","products","GridList","cellHeight","cols","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","component","price","inStock","CardActions","App","CssBaseline","Component","reducers","combineReducers","action","filter","productcart","activeCategoryCart","active","length","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32485d50.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n///////////////\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\n\nconst ITEM_HEIGHT = 48;\n\n\nfunction Header(props) {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    return (\n        <>\n            <header>\n                <h1>OUR STORE</h1>\n                <div className=\"menu\">\n                <h2>CART ({props.cart.cart})</h2>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n       <MoreVertIcon/>\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n          },\n        }}\n      >\n        {props.cart.cartProduct.map((option,i) => (\n          <MenuItem key={i} selected={option === 'Pyxis'} onClick={handleClose}>\n            {option.name}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n              \n            </header>\n        </>\n    );\n}\n\n///////////////////////////////////\n\n\n\n\n\n\n\n\n////////////////////////////////////\nconst mapStateToProps = state => ({\n    cart: state.cart\n});\nexport default connect(mapStateToProps)(Header);","import React from 'react';\n\n\nfunction Footer(){\n    return(\n        <>\n        <footer id=\"footer\">\n            <h2>&copy; Sondos-2020</h2>\n        </footer>\n        </>\n    );\n}\n\nexport default Footer;","let initialState = {\n    categories: [\n        { name: 'electronics', displayName: 'Elecronics' },\n        { name: 'food', displayName: 'Food' },\n        { name: 'clothing', displayName: 'Clothing' },\n    ],\n    \n    activeCategory: ''\n\n};\n\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n\n\n    switch (type) {\n        case 'PRODUCT':\n            state = initialState;\n            let activeCategory = state.categories.filter(cat => cat.name === payload)[0]['displayName'];\n            return { categories: state.categories,  activeCategory };\n            case 'CART':\n                state = initialState;\n            let activeCategoryCart = state.categories.filter(cat => cat.name === payload.category); \n            return { categories: state.categories, activeCategory: activeCategoryCart[0]['displayName']};\n        default:\n            let active = state.categories.filter(cat => cat.name === state.categories[0].name);\n\n            return { categories: state.categories, activeCategory: active[0]['displayName'] };\n    }\n}\n\nexport const productBaseCategory = (name) => {\n\n    return {\n        type: 'PRODUCT',\n        payload: name\n    }\n}\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { productBaseCategory } from '../store/categories';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst Categories = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <section className=\"counter\">\n            <Paper className={classes.root}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    {props.counter.categories.map((cat, i) =>\n                        <Tab\n                            div=\"true\"\n                            onClick={() => props.productBaseCategory(cat.name)}\n                            key={i}\n                            label={cat.displayName} />\n                    )}\n                </Tabs>\n            </Paper>\n        </section>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    counter: state.category\n});\n\nconst mapDispatchToProps = { productBaseCategory };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","let initialState = {\n    cartProduct: [],\n    cart: 0,\n};\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n    switch (type) {\n        case 'CART':\n            let cartProduct = [...state.cartProduct,payload];\n            return { cartProduct, cart: cartProduct.length };\n        default:\n\n\n            return state;\n    }\n}\n\nexport const addToCart = (product) => {\n    return {\n        type: 'CART',\n        payload: product\n    }\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport {addToCart} from '../store/cart'\n\nfunction SimpleCart(props){\nreturn(\n    <Button onClick={()=>props.addToCart(props.data)} size=\"small\" color=\"primary\">\n               Add To Cart\n               </Button>\n)\n}\n\n\nconst mapStateToProps = state => ({\n    cart: state.cart,\n    \n});\nconst mapDispatchToProps = { addToCart };\nexport default connect(mapStateToProps,mapDispatchToProps)(SimpleCart);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\n// import GridListTile from '@material-ui/core/GridListTile';\n// import tileData from './tileData';\nimport SimpleCart from './simple-cart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 800,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n  },\n}));\n\n\n\n\nconst Products = props => {\n    const classes = useStyles();\n    return (\n        <>\n        <div className=\"cont\">\n        <h1 id=\"category\">{props.category.activeCategory}</h1>\n        <p>category description goes here</p>\n        </div>\n        \n        <section className=\"products\">\n        <GridList cellHeight={200} className={classes.gridList} cols={3}>\n            {props.products.products.map((cat,i)=>\n             <Card className={classes.root} key={i}>\n             <CardActionArea>\n               <CardContent>\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                   {cat.name}\n                 </Typography>\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                   Price: {cat.price}$ - inStock: {cat.inStock}\n                 </Typography>\n               </CardContent>\n             </CardActionArea>\n             <CardActions>\n               {/* <Button size=\"small\" color=\"primary\">\n               Add To Cart\n               </Button> */}\n               <SimpleCart data={cat}/>\n               <Button size=\"small\" color=\"primary\">\n               View Detailes\n               </Button>\n             </CardActions>\n           </Card>\n            )}\n           </GridList>\n        </section>\n        </>\n    );\n}\n\n\n\nconst mapStateToProps = state => ({\n    products: state.product,\n    category: state.category\n});\n\nexport default connect(mapStateToProps)(Products);\n\n","import React from 'react';\nimport Header from './component/header';\nimport Footer from './component/footer';\nimport Categories from './component/categories';\nimport Products from './component/products';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './app.scss';\nclass App extends React.Component{\n  \n    render(){\n        return(\n            <>\n            <CssBaseline >\n            <Header/>\n            <Categories/>\n            <Products/>\n            <Footer/>\n            </CssBaseline>\n            \n            </>\n        )\n    }\n}\n\nexport default App;","let initialState = [\n    { name: 'TV', category: 'electronics', price: 699.00, inStock: 5 },\n    { name: 'Radio', category: 'electronics', price: 99.00, inStock: 15 },\n    { name: 'Shirt', category: 'clothing', price: 9.00, inStock: 25 },\n    { name: 'Socks', category: 'clothing', price: 12.00, inStock: 10 },\n    { name: 'Apples', category: 'food', price: .99, inStock: 500 },\n    { name: 'Eggs', category: 'food', price: 1.99, inStock: 12 },\n    { name: 'Bread', category: 'food', price: 2.39, inStock: 90 },\n];\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n\n\n    switch (type) {\n        case 'PRODUCT':\n            state = initialState;\n            let products = state.filter(product => product.category === payload);\n            return {  products };\n        case 'CART':\n            state = initialState;\n            let productcart = state.filter(product => product.category === payload.category);\n            return {  products :productcart};\n        default:\n            let product = state.filter(product => product.category === state[0].category);\n            return {  products: product};\n    }\n}\n\nexport const productBaseCategory = (name) => {\n\n    return {\n        type: 'PRODUCT',\n        payload: name\n    }\n}","import {combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; \n\n\nimport category from './categories';\nimport product from './products';\nimport cart from './cart';\n\nlet reducers = combineReducers({ product ,category, cart});\nconst store = () => {\n    return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport store from './store/';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n            <App />\n         </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}