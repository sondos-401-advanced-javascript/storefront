{"version":3,"sources":["component/header.js","component/footer.js","store/categories.js","component/categories.js","component/products.js","app.js","store/index.js","index.js"],"names":["Header","Footer","id","initialState","categories","name","displayName","products","category","price","inStock","activeCategory","useStyles","makeStyles","root","flexGrow","mapDispatchToProps","productBaseCategory","type","payload","connect","state","counter","product","props","classes","React","useState","value","setValue","className","Paper","Tabs","onChange","event","newValue","indicatorColor","textColor","centered","map","cat","i","Tab","div","onClick","key","label","theme","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","width","GridList","cellHeight","cols","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","size","App","CssBaseline","Component","reducers","combineReducers","action","filter","console","log","active","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1f9bde1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Header(){\n    return(\n        <>\n        <header>\n            <h1>OUR STORE</h1>\n            <h2>CART (0)</h2>\n        </header>\n        </>\n    );\n}\n\nexport default Header;","import React from 'react';\n\n\nfunction Footer(){\n    return(\n        <>\n        <footer id=\"footer\">\n            <h2>&copy; Sondos-2020</h2>\n        </footer>\n        </>\n    );\n}\n\nexport default Footer;","let initialState = {\n    categories: [\n        { name: 'electronics', displayName: 'Elecronics' },\n        { name: 'food', displayName: 'Food' },\n        { name: 'clothing', displayName: 'Clothing' },\n    ],\n    products: [\n        { name: 'TV', category: 'electronics', price: 699.00, inStock: 5 },\n        { name: 'Radio', category: 'electronics', price: 99.00, inStock: 15 },\n        { name: 'Shirt', category: 'clothing', price: 9.00, inStock: 25 },\n        { name: 'Socks', category: 'clothing', price: 12.00, inStock: 10 },\n        { name: 'Apples', category: 'food', price: .99, inStock: 500 },\n        { name: 'Eggs', category: 'food', price: 1.99, inStock: 12 },\n        { name: 'Bread', category: 'food', price: 2.39, inStock: 90 },\n    ],\n    activeCategory: ''\n\n};\n\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n\n\n    switch (type) {\n        case 'PRODUCT':\n            state = initialState;\n            let products = state.products.filter(product => product.category === payload);\n            let activeCategory = state.categories.filter(cat => cat.name === payload)[0]['displayName'];\n            console.log('active data inn n====>',activeCategory);\n            return { categories: state.categories, products, activeCategory };\n        default:\n            let product = state.products.filter(product => product.category === state.categories[0].name);\n            let active = state.categories.filter(cat => cat.name === state.categories[0].name);\n            console.log('active data ====>',active[0]['displayName']);\n\n            return { categories: state.categories, products: product, activeCategory: active[0]['displayName'] };\n    }\n}\n\nexport const productBaseCategory = (name) => {\n\n    return {\n        type: 'PRODUCT',\n        payload: name\n    }\n}\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { productBaseCategory } from '../store/categories';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst Categories = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <section className=\"counter\">\n            <Paper className={classes.root}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    {props.counter.categories.map((cat, i) =>\n                        <Tab\n                            div=\"true\"\n                            onClick={() => props.productBaseCategory(cat.name)}\n                            key={i}\n                            label={cat.displayName} />\n                    )}\n                </Tabs>\n            </Paper>\n        </section>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    counter: state.product\n});\n\nconst mapDispatchToProps = { productBaseCategory };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\n// import GridListTile from '@material-ui/core/GridListTile';\n// import tileData from './tileData';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 800,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n  },\n}));\n\n\n\n\nconst Products = props => {\n    const classes = useStyles();\n    return (\n        <>\n        <div className=\"cont\">\n        <h1 id=\"category\">{props.products.activeCategory}</h1>\n        <p>category description goes here</p>\n        </div>\n        \n        <section className=\"products\">\n        <GridList cellHeight={200} className={classes.gridList} cols={3}>\n            {props.products.products.map((cat,i)=>\n             <Card className={classes.root} key={i}>\n             <CardActionArea>\n               <CardContent>\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                   {cat.name}\n                 </Typography>\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                   Price: {cat.price}$ - inStock: {cat.inStock}\n                 </Typography>\n               </CardContent>\n             </CardActionArea>\n             <CardActions>\n               <Button size=\"small\" color=\"primary\">\n               Add To Cart\n               </Button>\n               <Button size=\"small\" color=\"primary\">\n               View Detailes\n               </Button>\n             </CardActions>\n           </Card>\n            )}\n           </GridList>\n        </section>\n        </>\n    );\n}\n\n\n\nconst mapStateToProps = state => ({\n    products: state.product\n});\n\nexport default connect(mapStateToProps)(Products);\n\n","import React from 'react';\nimport Header from './component/header';\nimport Footer from './component/footer';\nimport Categories from './component/categories';\nimport Products from './component/products';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './app.scss';\nclass App extends React.Component{\n  \n    render(){\n        return(\n            <>\n            <CssBaseline >\n            <Header/>\n            <Categories/>\n            <Products/>\n            <Footer/>\n            </CssBaseline>\n            \n            </>\n        )\n    }\n}\n\nexport default App;","import {combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; \n\n\nimport product from './categories';\n\nlet reducers = combineReducers({ product });\n\n\n\nconst store = () => {\n    return createStore(reducers, composeWithDevTools());\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './app';\nimport store from './store/';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n            <App />\n         </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}