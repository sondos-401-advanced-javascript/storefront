{"version":3,"sources":["store/actions.js","component/header.js","component/footer.js","component/cart.js","store/categories.js","component/categories.js","component/simple-cart.js","component/products.js","app.js","store/products.js","store/cart.js","store/reducer.js","store/index.js","index.js"],"names":["api","getRemoteData","dispatch","superagent","get","then","data","getAction","body","putRemoteData","change","id","a","quantity","parseInt","put","send","set","response","putAction","deleteRemoteData","product","delete","_id","deleteAction","postRemoteData","post","postAction","payload","type","connect","state","cart","getState","actions","props","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","useEffect","to","className","results","length","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","PaperProps","style","maxHeight","ITEM_HEIGHT","width","map","option","i","MenuItem","key","selected","name","Footer","useStyles","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","handelChange","e","target","value","classes","GridList","cellHeight","cols","cat","Card","CardActionArea","CardContent","Typography","gutterBottom","variant","component","color","price","onChange","placeholder","Button","initialState","categories","displayName","activeCategory","flexGrow","mapDispatchToProps","productBaseCategory","counter","category","setValue","Paper","Tabs","newValue","indicatorColor","textColor","centered","Tab","div","label","size","products","inStock","CardActions","App","CssBaseline","path","exact","Component","cartProduct","reducers","combineReducers","action","filter","addCart","deleteCart","activeCategoryCart","active","addToCart","store","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f48cc5c4.chunk.js","sourcesContent":["import superagent from 'superagent';\n\nlet api = 'https://api401-todo.herokuapp.com/product';\n\n\nexport const getRemoteData = () => dispatch => {\n\n    return superagent.get(api)\n        .then(data => {\n            dispatch(getAction(data.body))\n        });\n}\n\nexport const putRemoteData = (change, data,id) => async dispatch => {\n    data.quantity = parseInt(change);\n    return superagent.put(`${api}/${id}`)\n    .send(data)\n    .set('X-API-Key', 'foobar')\n    .set('Accept', 'application/json')\n    .then(response => {\n        dispatch(putAction(response));\n    });\n}\n\nexport const deleteRemoteData = (product) => async dispatch => {\n    await (await superagent.delete(`${api}/${product._id}`));\n    dispatch(deleteAction(product));\n}\n\nexport const postRemoteData = (data) => async dispatch => {\n\n    data.quantity = 1;\n    return superagent.post(api)\n        .send(data)\n        .set('X-API-Key', 'foobar')\n        .set('Accept', 'application/json')\n        .then(response => {\n            dispatch(postAction(response.body));\n        });\n\n}\n\n\n\nexport const getAction = payload => {\n    return {\n        type: 'GET',\n        payload: payload\n    }\n}\n\nexport const putAction = payload => {\n    return {\n        type: 'PUT',\n        payload: payload\n    }\n}\n\nexport const postAction = payload => {\n    return {\n        type: 'POST',\n        payload: payload\n    }\n}\n\nexport const deleteAction = payload => {\n    return {\n        type: 'DELETE',\n        payload: payload\n    }\n}","import React,{useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\n///////////////\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { Link } from 'react-router-dom';\n\n\nconst ITEM_HEIGHT = 48;\n\n\nfunction Header(props) {\n\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n    const fetchData = () => {\n      props.get();\n  }\n\n    useEffect(()=>{\n        fetchData();\n    });\n    \n    \n    return (\n        <>\n            <header>\n              <Link to='/storefront'>\n              <h1>OUR STORE</h1>\n              </Link>\n                <div className=\"menu\">\n                  <Link to='/cart'>\n                <h2>CART ({props.cart.results.length})</h2>\n                  </Link>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n       <MoreVertIcon/>\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n        PaperProps={{\n          style: {\n            maxHeight: ITEM_HEIGHT * 4.5,\n            width: '20ch',\n          },\n        }}\n      >\n        {props.cart.results.map((option,i) => (\n          <MenuItem key={i} selected={option === 'Pyxis'} onClick={handleClose}>\n            {option.name}\n            <span className=\"toDelete\" onClick={()=>props.delete(option)}>X</span>\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n              \n            </header>\n        </>\n    );\n}\n\n\nconst mapStateToProps = state => ({\n    cart: state.data\n});\nconst mapDispatchToProps = (dispatch, getState) => ({\n  get: ()=> dispatch(actions.getRemoteData()),\n  put: (id, data) => dispatch(actions.putRemoteData(id, data)),\n  post: (data) => dispatch(actions.postRemoteData(data)),\n  delete : (id) => dispatch(actions.deleteRemoteData(id))\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(Header);","import React from 'react';\n\n\nfunction Footer(){\n    return(\n        <>\n        <footer id=\"footer\">\n            <h2>&copy; Sondos-2020</h2>\n        </footer>\n        </>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../store/actions';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nimport Button from '@material-ui/core/Button';\n// import GridListTile from '@material-ui/core/GridListTile';\n// import tileData from './tileData';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n      overflow: 'hidden',\n      backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n      width: 800,\n      display: 'flex',\n      flexWrap: 'wrap',\n      justifyContent: 'space-around',\n    },\n  }));\n  let change;\n  const handelChange = (e) =>{\n    change = e.target.value;\n  }\nconst Cart = props => {\n    const classes = useStyles();\n    return (\n      <section className=\"products\">\n         \n           <GridList cellHeight={200} className={classes.gridList} cols={3}>\n            {props.data.results.map((cat,i)=>\n             <Card className={classes.root} key={i}>\n             <CardActionArea>\n               <CardContent>\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                   {cat.name}\n                 </Typography>\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                   Price: {cat.price}$ - Quantity: <input onChange={handelChange} className=\"inNum\" type=\"number\" name=\"quantity\" placeholder={cat.quantity} />\n                 </Typography>\n               </CardContent>\n             </CardActionArea>             \n             <Button onClick={()=>props.put(change,cat,cat._id)}>Update</Button>\n             <Button onClick={()=>props.delete(cat)}>Delete</Button>\n           </Card>\n            )}\n           </GridList>\n        </section>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    data: state.data\n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n    get: ()=> dispatch(actions.getRemoteData()),\n    put: (change,data, id) => dispatch(actions.putRemoteData(change,data, id)),\n    post: (data) => dispatch(actions.postRemoteData(data)),\n    delete : (id) => dispatch(actions.deleteRemoteData(id))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","let initialState = {\n    categories: [\n        { name: 'electronics', displayName: 'Elecronics' },\n        { name: 'food', displayName: 'Food' },\n        { name: 'clothing', displayName: 'Clothing' },\n    ],\n\n    activeCategory: ''\n\n};\n\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n\n\n    switch (type) {\n        case 'PRODUCT':\n            state = initialState;\n            let activeCategory = state.categories.filter(cat => cat.name === payload)[0]['displayName'];\n            return { categories: state.categories, activeCategory };\n        case 'CART':\n            state = initialState;\n            let activeCategoryCart = state.categories.filter(cat => cat.name === payload.category);\n            return { categories: state.categories, activeCategory: activeCategoryCart[0]['displayName'] };\n        case 'GET':\n            return state;\n        case 'PUT':\n            return state;\n        case 'POST':\n            return state;\n        case 'DELETE':\n            return state;\n        default:\n            let active = state.categories.filter(cat => cat.name === state.categories[0].name);\n\n            return { categories: state.categories, activeCategory: active[0]['displayName'] };\n    }\n}\n\nexport const productBaseCategory = (name) => {\n\n    return {\n        type: 'PRODUCT',\n        payload: name\n    }\n}\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { productBaseCategory } from '../store/categories';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nconst useStyles = makeStyles({\n    root: {\n        flexGrow: 1,\n    },\n});\n\nconst Categories = props => {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <section className=\"counter\">\n            <Paper className={classes.root}>\n                <Tabs\n                    value={value}\n                    onChange={handleChange}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    centered\n                >\n                    {props.counter.categories.map((cat, i) =>\n                        <Tab\n                            div=\"true\"\n                            onClick={() => props.productBaseCategory(cat.name)}\n                            key={i}\n                            label={cat.displayName} />\n                    )}\n                </Tabs>\n            </Paper>\n        </section>\n    )\n}\n\n\n\nconst mapStateToProps = state => ({\n    counter: state.category\n});\n\nconst mapDispatchToProps = { productBaseCategory };\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Categories);","import React from 'react';\nimport {connect} from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport * as actions from '../store/actions';\n\nfunction SimpleCart(props){\nreturn(\n    <Button onClick={()=>props.post(props.data)} size=\"small\" color=\"primary\">\n               Add To Cart\n               </Button>\n)\n}\n\n\nconst mapStateToProps = state => ({\n    cart: state.cart,  \n});\n\nconst mapDispatchToProps = (dispatch, getState) => ({\n    get: ()=> dispatch(actions.getRemoteData()),\n    put: (id, data) => dispatch(actions.putRemoteData(id, data)),\n    post: (data) => dispatch(actions.postRemoteData(data))\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(SimpleCart);","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n// import CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\n// import GridListTile from '@material-ui/core/GridListTile';\n// import tileData from './tileData';\nimport SimpleCart from './simple-cart';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    width: 800,\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n  },\n}));\n\n\n\n\nconst Products = props => {\n    const classes = useStyles();\n    return (\n        <>\n        <div className=\"cont\">\n        <h1 id=\"category\">{props.category.activeCategory}</h1>\n        <p>category description goes here</p>\n        </div>\n        \n        <section className=\"products\">\n        <GridList cellHeight={200} className={classes.gridList} cols={3}>\n            {props.products.products.map((cat,i)=>\n             <Card className={classes.root} key={i}>\n             <CardActionArea>\n               <CardContent>\n                 <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                   {cat.name}\n                 </Typography>\n                 <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                   Price: {cat.price}$ - inStock {cat.inStock}\n                 </Typography>\n               </CardContent>\n             </CardActionArea>\n             <CardActions>\n               <SimpleCart data={cat}/>\n               <Button size=\"small\" color=\"primary\">\n               View Detailes\n               </Button>\n             </CardActions>\n           </Card>\n            )}\n           </GridList>\n        </section>\n        </>\n    );\n}\n\n\n\nconst mapStateToProps = state => ({\n    products: state.product,\n    category: state.category\n});\n\nexport default connect(mapStateToProps)(Products);\n\n","import React from 'react';\nimport Header from './component/header';\nimport Footer from './component/footer';\nimport Cart from './component/cart';\nimport { Route } from 'react-router-dom';\nimport Categories from './component/categories';\nimport Products from './component/products';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport './app.scss';\nclass App extends React.Component {\n\n    render() {\n        return (\n            <>\n                <CssBaseline >\n                    <Header />\n                    <Route path=\"/storefront\" exact>\n                        <Categories />\n                        <Products />\n                    </Route>\n                    <Route path=\"/cart\">\n                        <Cart />\n                    </Route>\n                    <Footer />\n                </CssBaseline>\n\n            </>\n        )\n    }\n}\n\nexport default App;","let initialState = [\n    { name: 'TV', category: 'electronics', price: 699.00, inStock: 5 },\n    { name: 'Radio', category: 'electronics', price: 99.00, inStock: 15 },\n    { name: 'Shirt', category: 'clothing', price: 9.00, inStock: 25 },\n    { name: 'Socks', category: 'clothing', price: 12.00, inStock: 10 },\n    { name: 'Apples', category: 'food', price: .99, inStock: 500 },\n    { name: 'Eggs', category: 'food', price: 1.99, inStock: 12 },\n    { name: 'Bread', category: 'food', price: 2.39, inStock: 90 },\n];\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n\n    switch (type) {\n        case 'PRODUCT':\n            state = initialState;\n            let products = state.filter(product => product.category === payload);\n            return { products };\n        case 'CART':\n            return state;\n        case 'GET':\n            return state;\n        case 'PUT':\n            return state;\n        case 'POST':\n            // state = initialState;\n            let addCart = state.products.map(product =>{\n                if(product.name === payload.name){\n                    product.inStock--;\n                }\n                return product;\n            });\n            \n            return { products: addCart };\n        case 'DELETE':\n            let deleteCart = state.products.map(product =>{\n                if(product.name === payload.name){\n                     product.inStock++;\n                }\n                return product;\n            });\n            \n            return { products: deleteCart };\n        default:\n            let product = state.filter(product => product.category === state[0].category);\n            return { products: product };\n    }\n}\n\nexport const productBaseCategory = (name) => {\n\n    return {\n        type: 'PRODUCT',\n        payload: name\n    }\n}","let initialState = {\n    cartProduct: [],\n    cart: 0,\n};\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n    switch (type) {\n        case 'CART':\n            let cartProduct = [...state.cartProduct,payload];\n            return { cartProduct, cart: cartProduct.length };\n        default:\n\n\n            return state;\n    }\n}\n\nexport const addToCart = (product) => {\n    return {\n        type: 'CART',\n        payload: product\n    }\n}","let initialState = { results: [] };\n\nexport default (state = initialState, action) => {\n    let { type, payload } = action;\n    switch (type) {\n        case 'GET':\n            return { results: payload };\n        case 'PUT':\n            return state;\n        case 'POST':\n            let addToCart = [...state.results,payload];\n            return { results: addToCart };\n        case 'DELETE':\n            return state;\n        default:\n            return state;\n    }\n}","import {combineReducers, createStore ,applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension'; \n\nimport ReduxThunk from 'redux-thunk';\n\nimport category from './categories';\nimport product from './products';\nimport cart from './cart';\nimport data from './reducer';\n\nlet reducers = combineReducers({ product ,category, cart ,data});\nconst store = () => {\n    return createStore(reducers, composeWithDevTools(applyMiddleware(ReduxThunk)));\n}\n\nexport default store();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\nimport App from './app';\nimport store from './store/';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n    <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n         </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}